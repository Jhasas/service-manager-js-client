{
  "name": "@crossworth/service-manager",
  "license": "MIT",
  "version": "0.1.0",
  "description": "A client for a simple service manager",
  "main": "dist/index.js",
  "scripts": {
    "build": "babel src -d dist",
    "lint": "eslint src __tests__ --fix; exit 0",
    "test": "jest --verbose",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/crossworth/service-manager-js-client.git"
  },
  "keywords": [
    "service manager"
  ],
  "author": "Pedro Henrique <system.pedrohenrique@gmail.com>",
  "bugs": {
    "url": "https://github.com/crossworth/service-manager-js-client/issues"
  },
  "homepage": "https://github.com/crossworth/service-manager-js-client",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.24.1",
    "babel-loader": "^7.0.0",
    "babel-plugin-transform-object-rest-spread": "^6.16.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.4.0",
    "eslint": "6.1.0",
    "eslint-config-airbnb-base": "14.0.0",
    "eslint-config-spatie": "^1.1.0",
    "eslint-plugin-import": "^2.18.2",
    "jest": "^24.9.0",
    "nock": "^11.3.5"
  },
  "dependencies": {
    "axios": "^0.19.0",
    "internal-ip": "^4.3.0"
  }
}


// javascript form submit

function submitform() {

teste = document.myform.submit();

alert(teste);

}



function campina(){

        if (cidade == "Colombo"){
            alert("servico disponivel");
        } else {
            alert("serviço não disponivel");
        }


    }
    

    function meu_callback(conteudo) {
        if (!("erro" in conteudo)) {
            //Atualiza os campos com os valores.
            
             cidade =(conteudo.localidade);
             campina();

            
        } //end if.
        else {
            //CEP não Encontrado.
            alert("CEP não encontrado.");
        }
    }
        
    function pesquisacep() {

        //Nova variável "cep" somente com dígitos.
        // var cep = valor.replace(/\D/g, '');
        var cep = valor.replace(/\D/g, '');

        //Verifica se campo cep possui valor informado.
        if (cep != "") {

            //Expressão regular para validar o CEP.
            var validacep = /^[0-9]{8}$/;

            //Valida o formato do CEP.
            if(validacep.test(cep)) {


                //Cria um elemento javascript.
                var script = document.createElement('script');

                //Sincroniza com o callback.
                script.src = 'https://viacep.com.br/ws/'+ cep + '/json/?callback=meu_callback';

                //Insere script no documento e carrega o conteúdo.
                document.body.appendChild(script);

            } //end if.
            else {
                //cep é inválido.
                alert("Formato de CEP inválido.");
            }
        } //end if.

    };
